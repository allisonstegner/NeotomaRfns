warnings()
ages3 = BchronCalibrate(ages=c(3445,11553),ageSds=c(50,230),positions=c(100,150),#
                        calCurves=c('intcal13','normal'))#
summary(ages3)#
plot(ages3,withDepths=TRUE)
warnings()
names(XX)
plot(c(0,5000),c(0,200),xlim=c(5000,0),ylim=c(200,0))
plot(c(0,5000),c(0,200),xlim=c(5000,0),ylim=c(200,0),type="n")
?density
XX[[1]]
i=1
cbind(XX[[i]]$ageGrid,XX[[i]]$densities)
cbind(XX[[i]]$ageGrid,XX[[i]]$densities)
i=1#
polygon(cbind(XX[[i]]$ageGrid,XX[[i]]$densities))
?polygons
?polygon
polygon(x=XX[[i]]$ageGrid,y=XX[[i]]$densities)
XX[[1]]
plot(XX,withPositions=T)
?Bchron
?BchronCalibrate
plot(XX,withPositions=T,xlim=c(5000,0),ylim=c(200,0))
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),col="black")
summary(XX)
summary(XX)
cbind(XX[[j]]$densities,XX[[j]]$ageGrid)
which(max(XX[[j]]$densities))
which(XX[[j]]$densities==max(XX[[j]]$densities))
XX[[j]]$ageGrid[max]
max<-which(XX[[j]]$densities==max(XX[[j]]$densities))
XX[[j]]$ageGrid[max]
plot(xx[[j]])
plot(XX[[j]])
plot(XX[j])
plot(XX[[j]])
plot(x=XX[[]]$ageGrid,y=XX[[j]]$densities)
plot(c(0,5000),c(0,200),type="n")
polygon(x=XX[[]]$ageGrid,y=XX[[j]]$densities)
plot(x=XX[[j]]$ageGrid,y=XX[[j]]$densities)
bestest
max<-which(XX[[j]]$densities==max(XX[[j]]$densities))#
	bestest<-XX[[j]]$ageGrid[max]
bestest
abline(v="bestest")
abline(v=bestest)
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
WL[which(WL$Material!="charcoal"),]
bone<-WL[which(WL$Material!="charcoal"),]
bone<-WL[which(WL$Material!="charcoal"),]#
bone.calybp<-BchronCalibrate(ages=bone$X14C.Age,ageSds=bone$X14C.Err,calCurves=bone$cc,positions=bone$Depth)#
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),col="red")
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols="red")
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols="gray50")
bone.calybp<-BchronCalibrate(ages=bone$X14C.Age,ageSds=bone$X14C.Err,calCurves=bone$cc,positions=bone$Depth)#
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols="gray50")
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols=rep("gray50",length(bone.calybp)))
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols=rep("gray50",length(bone.calybp)),xaxt="n")
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols=rep("gray50",length(bone.calybp)),xaxt="n",yaxt="n")
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols=rep("gray50",length(bone.calybp)),xaxt="n",yaxt="n",ylab="n",xlab="n")
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),fillCols=rep("gray50",length(bone.calybp)),xaxt="n",yaxt="n",ylab="",xlab="")
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0))
abline(v=seq(0,4000,500),lwd=1)
abline(v=seq(0,4000,500),lwd=0.25)
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)")
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP")
abline(v=seq(0,4000,500),lwd=0.25)
abline(v=seq(0,4000,500),lwd=0.25)
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),xaxt="n",yaxt="n",ylab="",xlab="",fillCols=rep("gray30",length(bone.calybp)))
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray50",length(bone.calybp)))
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray50",length(bone.calybp)),las=1)
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray50",length(bone.calybp)),las=1)
XX<-BchronCalibrate(ages=WL$X14C.Age,ageSds=WL$X14C.Err,calCurves=WL$cc,positions=WL$Depth)#
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray50",length(bone.calybp)),las=1)#
abline(v=seq(0,4000,500),lwd=0.25)
WL<-read.csv("~/Google Drive/1 Stanford postdoc/Waterfall Locality/Waterfall_14C.csv")#
XX<-BchronCalibrate(ages=WL$X14C.Age,ageSds=WL$X14C.Err,calCurves=WL$cc,positions=WL$Depth)#
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray50",length(bone.calybp)),las=1)#
abline(v=seq(0,4000,500),lwd=0.25)
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray60",length(XX)),las=1)#
abline(v=seq(0,4000,500),lwd=0.25)
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),xaxt="n",yaxt="n",ylab="",xlab="",fillCols=rep("gray30",length(bone.calybp)))
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray60",length(XX)),las=1,main="")
abline(v=seq(0,4000,500),lwd=0.25)
plot(bone.calybp,withPositions=T,xlim=c(3500,0),ylim=c(200,0),xaxt="n",yaxt="n",ylab="",xlab="",fillCols=rep("gray30",length(bone.calybp)),main="")
depths<-c(26,40,47,50,51,53,57,59,61,69,62,78,90,93,98,115,126,169,188,193,199)
abline(h=depths)
plot(XX,withPositions=T,xlim=c(3500,0),ylim=c(200,0),ylab="Depth (cm)",xlab="Cal yr BP",fillCols=rep("gray60",length(XX)),las=1,main="")
abline(h=depths)
am<-Bchronology(ages=WL$X14C.Age,ageSds=WL$X14C.Err,calCurves=WL$cc,positions=WL$Depth,jitterPositions=T)
WL
ac100<-eighttwotab[which(eighttwotab[,1]==1),]#
ac250<-eighttwotab[which(eighttwotab[,2]==1),]#
ac500<-eighttwotab[which(eighttwotab[,3]==1),]#
map_dl(pol_dlx,X,Y,add=F,return.table=F,col="gray70")#
points(ac500[,4],ac500[,5],pch=16,col=rgb(1,1,0,1))#
points(ac250[,4],ac250[,5],pch=16,col=rgb(1,0.5,0,1))#
points(ac100[,4],ac100[,5],pch=16,col=rgb(1,0,0,1))#
ac100<-fourtwotab[which(fourtwotab[,1]==1),]#
ac250<-fourtwotab[which(fourtwotab[,2]==1),]#
ac500<-fourtwotab[which(fourtwotab[,3]==1),]#
map_dl(pol_dlx,X,Y,add=F,return.table=F,col="gray70")#
points(ac500[,4],ac500[,5],pch=16,col=rgb(1,1,0,1))#
points(ac250[,4],ac250[,5],pch=16,col=rgb(1,0.5,0,1))#
points(ac100[,4],ac100[,5],pch=16,col=rgb(1,0,0,1))
X<-c(-160,-50)#
Y<-c(10,89.99)#
map_dl(pol_dly,X,Y,add=FALSE,col="blue",label.sites=FALSE,return.table=F)#
map_dl(pol_dl_s3,X,Y,add=T,col="green",label.sites=FALSE,return.table=F)
ac100<-eighttwotab[which(eighttwotab[,1]==1),]#
ac250<-eighttwotab[which(eighttwotab[,2]==1),]#
ac500<-eighttwotab[which(eighttwotab[,3]==1),]#
map_dl(pol_dlx,X,Y,add=F,return.table=F,col="gray70")#
points(ac500[,4],ac500[,5],pch=16,col=rgb(1,1,0,1))#
points(ac250[,4],ac250[,5],pch=16,col=rgb(1,0.5,0,1))#
points(ac100[,4],ac100[,5],pch=16,col=rgb(1,0,0,1))
ac100<-fourtwotab[which(fourtwotab[,1]==1),]#
ac250<-fourtwotab[which(fourtwotab[,2]==1),]#
ac500<-fourtwotab[which(fourtwotab[,3]==1),]#
map_dl(pol_dlx,X,Y,add=F,return.table=F,col="gray70")#
points(ac500[,4],ac500[,5],pch=16,col=rgb(1,1,0,1))#
points(ac250[,4],ac250[,5],pch=16,col=rgb(1,0.5,0,1))#
points(ac100[,4],ac100[,5],pch=16,col=rgb(1,0,0,1))
step<- -250#
ageolder<-10000#
iter<-100#
par(mfrow=c(2,1),mar=c(1,6,1,1),oma=c(6,1,1,1))#
plotacs(multi.bcp,step,iter,ageolder)#
abline(v=seq(0,ageolder,1000),lwd=0.25)#
plotacs(multi.coniss,step,iter,ageolder)#
abline(v=seq(0,ageolder,1000),lwd=0.25)
tally.iter_am
min(tally.iter_am)
tally.iter_ac
colSums(tally.iter_ac)
bins
sample(bins,size=994,replace=T)
table(sample(bins,size=994,replace=T))
tally.iter_am
(tally.iter_am)
colSums(tally.iter_ac)
rowSums(tally.iter_ac)
bins
tally_cor<-tally.iter_ac/tally.iter_am
tally_cor
?apply
length(bins)
apply(tally_cor,2,mean)
mean(tally_cor)
step<- -250#
ageolder<-10000#
iter<-100#
par(mfrow=c(2,1),mar=c(1,6,1,1),oma=c(6,1,1,1))#
plotacs(multi.bcp,step,iter,ageolder)#
abline(v=seq(0,ageolder,1000),lwd=0.25)#
plotacs(multi.coniss,step,iter,ageolder)#
abline(v=seq(0,ageolder,1000),lwd=0.25)
WLnisp<-read.csv("~/Google Drive/1 Stanford postdoc/Waterfall Locality/2019 updated ms/Data/WL_NISP.csv")
head(WLnisp)
WLnisp[WLnisp==NA]
WLnisp[which(WLnisp==NA)]
WLnisp[is.na(WLnisp)]
which(is.na(WLnisp))
WLnisp[which(is.na(WLnisp))]<-0
WLnisp[NA]<-0
WLnisp
is.na(WLnisp)
WLnisp[is.na(WLnisp)]<-0
WLnisp
dim(WLnisp)
WLtax<-WLnisp[,c(2:33)]
WLtax<-WLnisp[,c(2:20)]
WLnisp[,c(2:20)]
WLtax<-WLnisp[,c(2:18)]
WLtax
rowSums(Wltax)
rowSums(WLtax)
order[rowSums(WLtax)]
order(rowSums(WLtax))
WLtax[order(rowSums(WLtax)),]
rownames(WLtax)<-WLnisp[,1]
WLtax
WLtax[order(rowSums(WLtax)),]
WLtax<-WLtax[order(rowSums(WLtax)),]
rowSums(WLtax)
rowSums(WLtax)>0
WLtax[rowSums(WLtax)>0,]
WLtaxcc<-WLtax[rowSums(WLtax)>0,]
dim(WLtaxcc)
WLtax<-WLnisp[,c(2:18)]#
rownames(WLtax)<-WLnisp[,1]#
#WLtax<-WLtax[order(rowSums(WLtax)),]#
WLtaxcc<-WLtax[rowSums(WLtax)>0,
]
taxj<-WLtaxcc[j,]
plot(taxj)
WLtaxcc[j,]
plot(taxj,c(1;ncol(WLtaxcc)))
plot(taxj,c(1:ncol(WLtaxcc)))
taxj
WLtaxcc[j,]
as.vector(WLtaxcc[j,])
plot(taxj,c(1:ncol(WLtaxcc)),type="l")
plot(taxj,c(1:length(taxj)),type="l")
plot(taxj,c(1:length(taxj)))
c(1:length(taxj))
taxj
WLtaxcc[[j,]]
WLtaxcc<-as.matrix(WLtax[rowSums(WLtax)>0,])
WLtaxcc
WLtaxcc[j,]
taxj<-WLtaxcc[j,]
plot(taxj,c(1:length(taxj)))
plot(taxj,c(1:length(taxj)),type="l")
par(mfrow=c(2,10))#
for (j in 1:nrow(WLtaxcc)){#
	taxj<-WLtaxcc[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
}
par(mfrow=c(2,5))#
for (j in 1:nrow(WLtaxcc)){#
	taxj<-WLtaxcc[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
}
par(mfrow=c(2,10),mar=c(1,0,1,0),oma=c(4,4,1,1))#
for (j in 1:nrow(WLtaxcc)){#
	taxj<-WLtaxcc[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
}
par(mfrow=c(2,10),mar=c(1,0,1,0),oma=c(4,4,1,1))#
for (j in 1:nrow(WLtaxcc)){#
	taxj<-WLtaxcc[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
	mtext(rownames(WLtaxcc)[j],3)#
}
par(mfrow=c(2,10),mar=c(1,0,1,0),oma=c(4,4,1,1))#
for (j in 1:nrow(WLtaxcc)){#
	taxj<-WLtaxcc[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
	mtext(rownames(WLtaxcc)[j],3,cex=0.6)#
}
WLtaxcc
WLpct<-WLtaxcc/rowSums(WLtaxcc)
WLvar<-WLpct#
par(mfrow=c(2,10),mar=c(1,0,1,0),oma=c(4,4,1,1))#
for (j in 1:nrow(WLvar)){#
	taxj<-WLvar[j,]#
	if (j==1){#
		choose="s"#
	} else {#
		choose="n"#
	}#
	plot(taxj,c(1:length(taxj)),type="l",yaxt=choose)#
	mtext(rownames(WLvar)[j],3,cex=0.6)#
}
distmatx<-dist(sqrt(WLpct),method="euclidean")
WLconiss<-chclust(distmatx)
plot(WLconiss)
WLpct
distmatx<-dist(sqrt(t(WLpct)),method="euclidean")
WLconiss<-chclust(distmatx)
plot(WLconiss)
bstick(WLconiss)
library(principalcurve)
library(principlecurve)
library(principlecurves)
library(principlecurve)
library(princurve)
principleCurve(sqrt(t(WLpct))
principleCurve(sqrt(t(WLpct)))
principleCurve(sqrt(t(WLpct)))
principlecurve(sqrt(t(WLpct)))
principalcurve(sqrt(t(WLpct)))
principal.curve(sqrt(t(WLpct)))
pcWL<-principal.curve(sqrt(t(WLpct)))
pcWL<-principal_curve(sqrt(t(WLpct)))
pcWL$lambda
plot(pcWL$lambda,type="l")
WLpca<-prcomp(sqrt(t(WLpct)))
ordiplot(WLpca,type="text")
WLpca<-prcomp(sqrt((WLpct)))
ordiplot(WLpca,type="text")
WLvar<-WLpct
WLvar
cor.test(tax1,tax2)
i=1
j=2
k=3
tax1<-WLvar[j,]
tax2<-WLvar[k,]
cor(tax1,tax2,method="spearman")
cor.test(tax1,tax2,method="spearman")
ps[j,k]<-cor.out$p.value
cor.out$p.value
cor.out<-cor.test(tax1,tax2,method="spearman")
cor.out$p.value
cor.out$estimate
cor.out$estimate[1]
cor.out$estimate[[1]]
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
for (j in 1:nrow(WLvar)){#
	tax1<-WLvar[j,]#
	for (k in j:nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[j,k]<-cor.out$p.value#
		rhos[j,k]<-cor.out$estimate[[1]]#
	}#
}
rownames(rhos)<-rownames(ps)<-rownames(WLvar)
rhos
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
for (j in 1:nrow(WLvar)){#
	tax1<-WLvar[j,]#
	for (k in j:nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		rhos[k,j]<-cor.out$estimate[[1]]#
	}#
}
rhos
rownames(rhos)<-rownames(ps)<-colnames(ps)<-colnames(rhos)<-rownames(WLvar)
rhos
length(is.na(ps))
p.adjust(ps,method="Holm",n=length(!is.na(ps)))
p.adjust(ps,method="holm",n=length(!is.na(ps)))
holm.ps<-p.adjust(ps,method="holm",n=length(!is.na(ps)))
which(holm.ps<0.05)
holm.ps
rhos
length(!is.na(ps)
)
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
adjps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
for (j in 1:nrow(WLvar)){#
	tax1<-WLvar[j,]#
	for (k in j:nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		adjps[k,j]<-p.adjust(cor.out$p.value,method="holm",n=1089)#
		rhos[k,j]<-cor.out$estimate[[1]]#
	}#
}
adjps
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
adjps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
for (j in 1:nrow(WLvar)){#
	tax1<-WLvar[j,]#
	for (k in j+1:nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		adjps[k,j]<-p.adjust(cor.out$p.value,method="holm",n=1089)#
		rhos[k,j]<-cor.out$estimate[[1]]#
	}#
}
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
adjps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
for (j in 1:c(nrow(WLvar)-1)){#
	tax1<-WLvar[j,]#
	for (k in c(j+1):nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		adjps[k,j]<-p.adjust(cor.out$p.value,method="holm",n=1089)#
		rhos[k,j]<-cor.out$estimate[[1]]#
	}#
}
warnings()
rhos
adjps
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
adjps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
sig.matx<-c()#
for (j in 1:c(nrow(WLvar)-1)){#
	tax1<-WLvar[j,]#
	for (k in c(j+1):nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		adjp<-p.adjust(cor.out$p.value,method="holm",n=1089)#
		adjps[k,j]<-adjp#
		rhos[k,j]<-cor.out$estimate[[1]]#
		if (adjp<0.05){#
			signif<-c(rownames(WLvar)[j],rownames(WLvar)[k],cor.out$estimate[[1]])#
			sig.matx<-rbind(sig.matx,signif)#
		}#
	}#
}
sig.matx
ps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
adjps<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
rhos<-matrix(NA,nr=nrow(WLvar),nc=nrow(WLvar))#
sig.matx<-c()#
for (j in 1:c(nrow(WLvar)-1)){#
	tax1<-WLvar[j,]#
	for (k in c(j+1):nrow(WLvar)){#
		tax2<-WLvar[k,]#
		cor.out<-cor.test(tax1,tax2,method="spearman")#
		ps[k,j]<-cor.out$p.value#
		adjp<-p.adjust(cor.out$p.value,method="holm",n=1089)#
		adjps[k,j]<-adjp#
		rhos[k,j]<-cor.out$estimate[[1]]#
		if (adjp<0.05){#
			signif<-c(rownames(WLvar)[j],rownames(WLvar)[k],cor.out$estimate[[1]],adjp)#
			sig.matx<-rbind(sig.matx,signif)#
		}#
	}#
}
sig.matx
t(WLvar)
tWL<-t(WLvar)
sig.matx
tWL[,(sig.matx[1,c(1:2)])]
i=1
plot(tWL[,(sig.matx[i,c(1:2)])])
dim(sgi.matx)
dim(sig.matx)
par(mfrow=c(3,3),mar=c(1,1,1,1))#
for (i in 1:nrow(sig.matx)){#
	plot(tWL[,(sig.matx[i,c(1:2)])])#
}
plot(tWL[,(sig.matx[i,c(1:2)])],pch=16)
par(mfrow=c(3,3),mar=c(1,1,1,1))#
for (i in 1:nrow(sig.matx)){#
	plot(tWL[,(sig.matx[i,c(1:2)])],pch=16)#
}
